apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
  // please keep the list grouped by configuration and ordered by name
  implementation 'commons-io:commons-io'
  implementation 'commons-lang:commons-lang'
  implementation 'com.google.code.gson:gson'

  // shaded, but not relocated
  implementation project(':check-api')

  compileOnly 'ch.qos.logback:logback-classic'
  compileOnly 'com.google.code.findbugs:jsr305'
  compileOnly 'javax.servlet:javax.servlet-api'
  compileOnly 'junit:junit'
  // Used by LogTesterJUnit5
  compileOnly 'org.junit.jupiter:junit-jupiter-api'
  compileOnly 'org.slf4j:slf4j-api'

  testImplementation 'com.google.guava:guava'
  testImplementation 'com.tngtech.java:junit-dataprovider'
  testImplementation 'org.assertj:assertj-core'
  testImplementation 'org.mockito:mockito-core'
}

configurations {
  // Make the compileOnly dependencies available when compiling/running tests
  testImplementation.extendsFrom compileOnly
}

def on3Digits(version) {
  def projectversion3digits = version - ~/-\w+/
  projectversion3digits = projectversion3digits.tokenize('.').plus(0).take(3).join('.')
}

import org.apache.tools.ant.filters.ReplaceTokens
processResources {
  filter ReplaceTokens, tokens: [
    // The build version is composed of 4 fields, including the semantic version and the build number provided by Travis.
    'project.buildVersion': project.version.endsWith('SNAPSHOT') ? project.version : on3Digits(project.version) + '.' + (System.getProperty("buildNumber") ?: '0'),
  ]
}

shadowJar {
  configurations = [project.configurations.runtimeClasspath]
  minimize {
    exclude(project(':check-api'))
  }
  relocate('com.google', 'org.sonar.api.internal.google')
  relocate('org.apache.commons', 'org.sonar.api.internal.apachecommons')
}

tasks["build"].dependsOn(shadowJar)

// only interested in shadowJar
jar.enabled = false
artifactoryPublish.skip = false

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'sonar-plugin-api'
      pom {
        name = 'Sonar Plugin API'
        description = project.description
        url = 'https://www.sonarqube.org/'
        organization {
          name = 'SonarSource'
          url = 'https://www.sonarsource.com/'
        }
        licenses {
          license {
            name = 'GNU LGPL 3'
            url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
            distribution = 'repo'
          }
        }
        scm {
          url = 'https://github.com/SonarSource/sonar-plugin-api'
        }
        developers {
          developer {
            id = 'sonarsource-team'
            name = 'SonarSource Team'
          }
        }
      }
      artifact source: shadowJar, classifier: null
      artifact sourcesJar
      artifact javadocJar
    }
  }
}
